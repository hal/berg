on:
  workflow_dispatch:
name: "Manual matrix test execution"
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  test_matrix:
    strategy:
      fail-fast: false
      matrix:
        specs:
          [
            "datasource",
            "interface",
            "path",
            "batch-jberet",
            "core-management",
            "deployment-scanner",
            "distributable-web",
            "ee",
            "ejb",
            "elytron",
            "elytron-oidc-client",
            "health",
            "io",
            "jmx",
            "jpa",
            "jsf",
            "mail",
            "microprofile",
            "metrics",
            "runtime",
            "security-manager",
            "system-property",
            "transaction",
            "weld",
            "homepage",
            "smoke",
            "update-manager",
            "undertow",
          ]
        exclude:
          - specs: "update-manager"
    name: "Run tests"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout project"
        uses: actions/checkout@v4
      - name: "Setup NodeJS"
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: "Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "17"
      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
      - name: Install Firefox
        uses: browser-actions/setup-firefox@v1
        with:
          firefox-version: "latest-esr"
      - name: "Check docker status"
        run: systemctl status docker
      - name: "Run npm install"
        run: "npm install"
      - name: "Run compile"
        run: "npm run compile"
      - name: "Run test(s)"
        run: "cd packages/testsuite && npm test -- --browser=firefox --specs=cypress/e2e/${{ matrix.specs }}"
      - name: "Archive test report(s) and video(s)"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: "${{ github.run_id}}-${{ strategy.job-index }}-artifacts"
          path: |
            packages/testsuite/results
            packages/testsuite/cypress/videos
  process_report:
    name: "Collect results & deploy GH pages"
    needs: test_matrix
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: "Download artifacts"
        uses: actions/download-artifact@v4
      - name: "Setup NodeJS"
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: "Install necessary tools"
        run: npm install -g copyfiles gh-pages@3.0.0 mochawesome-merge mochawesome-report-generator
      - name: "Generate Mochawesome Report"
        run: mochawesome-merge "./*-artifacts/results/cypress/e2e/*.json" > mochawesome.json
      - name: "Copy video assets"
        run: copyfiles -u 3 "./*-artifacts/cypress/videos/*.mp4" mochawesome-report/assets/videos
      - name: "Create GH Pages content"
        run: marge mochawesome.json -f index.html
      - name: "Get time info"
        uses: josStorer/get-current-time@v2
        id: current-time
      - name: "Publish GH Pages"
        run: |
          gh-pages -r https://git:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git -d mochawesome-report -f -u "github-actions-bot <support+actions@github.com>" -m "${{ steps.current-time.outputs.readableTime }}"
